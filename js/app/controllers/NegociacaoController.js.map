{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","Negociacao","NegociacoesView","MensagemView","NegociacaoService","NegociacaoDao","DateHelper","Bind","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","error","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","erro","envia","importa","apaga","esvazia","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordenaTabela","a","b"],"mappings":";;;;;;;;;;;;;;;AAAQA,4B,2BAAAA,gB;;AACAC,oB,mBAAAA,Q;;AACAC,sB,qBAAAA,U;;AAEAC,2B,yBAAAA,e;;AACAC,wB,sBAAAA,Y;;AAEAC,6B,8BAAAA,iB;;AACAC,yB,qBAAAA,a;;AAEAC,sB,sBAAAA,U;;AACAC,gB,gBAAAA,I;;;;;;;;;;;;;;;;;;;;;4CAGKC,oB;AAET,gDAAc;AAAA;;AAEV,wBAAIC,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAR,CAFU,CAEqC;;AAE/C,yBAAKG,UAAL,GAAkBJ,EAAE,OAAF,CAAlB,CAJU,CAIoB;AAC9B,yBAAKK,gBAAL,GAAwBL,EAAE,aAAF,CAAxB;AACA,yBAAKM,WAAL,GAAmBN,EAAE,QAAF,CAAnB;;AAEA;;AAEA;AACA,yBAAKO,iBAAL,GAAyB,IAAIT,IAAJ,CACrB,IAAIR,gBAAJ,EADqB,EAErB,IAAIG,eAAJ,CAAoBO,EAAE,kBAAF,CAApB,CAFqB,EAGrB,UAHqB,EAGT,SAHS,EAGE,cAHF,EAGkB,cAHlB,CAAzB;AAKA;;;;;;;;;;;AAWA;AACA;AACA;AACA;;AAEA;;;AAIA;;AAEA,yBAAKQ,SAAL,GAAiB,IAAIV,IAAJ,CACb,IAAIR,gBAAJ,EADa,EAEb,IAAII,YAAJ,CAAiBM,EAAE,eAAF,CAAjB,CAFa,EAGb,OAHa,CAAjB;;AAMA;;;;;;;;;AASD,yBAAKS,WAAL,GAAmB,EAAnB;;AAEA,yBAAKC,QAAL,GAAgB,IAAIf,iBAAJ,EAAhB;;AAEA,yBAAKgB,KAAL;AAEF;;;;4CAEM;AAAA;;AAEH,6BAAKD,QAAL,CACKE,KADL,GAEKC,IAFL,CAEU;AAAA,mCACFC,YAAYC,OAAZ,CAAoB;AAAA,uCAChB,MAAKR,iBAAL,CAAuBS,QAAvB,CAAgCC,UAAhC,CADgB;AAAA,6BAApB,CADE;AAAA,yBAFV,EAKMC,KALN,CAKY;AAAA,mCAAQ,MAAKV,SAAL,CAAeW,KAAf,GAAuBC,KAA/B;AAAA,yBALZ;AAMI;;;;;;;;;;AAWHC,oCAAY,YAAM;AACd,kCAAKC,kBAAL;AACH,yBAFD,EAEG,IAFH;AAGJ;;;6CAEQC,K,EAAM;AAAA;;AAEXA,8BAAMC,cAAN;;AAEA,4BAAIP,aAAa,KAAKQ,eAAL,EAAjB;;AAEA,6BAAKf,QAAL,CACKgB,QADL,CACcT,UADd,EAEKJ,IAFL,CAEU,oBAAY;AACd,mCAAKN,iBAAL,CAAuBS,QAAvB,CAAgCC,UAAhC;AACA,mCAAKT,SAAL,CAAeW,KAAf,GAAuBQ,QAAvB;AACA,mCAAKC,gBAAL;AACH,yBANL,EAOKV,KAPL,CAOW;AAAA,mCAAQ,OAAKV,SAAL,CAAeW,KAAf,GAAuBU,IAA/B;AAAA,yBAPX;;AAUA;;;;;;;;;;AAaH;;;uDAEiB;AACd,6BAAKnB,QAAL,CACKoB,KADL,CACWxC,gBADX;AAEH;;;yDAEmB;AAAA;;AAEhB,6BAAKoB,QAAL,CACKqB,OADL,CACa,KAAKxB,iBAAL,CAAuBO,WADpC,EAEKD,IAFL,CAEU,uBAAe;AACjBC,wCAAYC,OAAZ,CAAoB;AAAA,uCAAc,OAAKR,iBAAL,CAAuBS,QAAvB,CAAgCC,UAAhC,CAAd;AAAA,6BAApB;AACA,mCAAKT,SAAL,CAAeW,KAAf,GAAuB,oCAAvB;AACH,yBALL,EAMKD,KANL,CAMW;AAAA,mCAAS,OAAKV,SAAL,CAAeW,KAAf,GAAuBC,KAAhC;AAAA,yBANX;AAOH;;;4CAEM;AAAA;;AAEH,6BAAKV,QAAL,CACKsB,KADL,GAEKnB,IAFL,CAEU,oBAAY;AACd,mCAAKL,SAAL,CAAeW,KAAf,GAAuBQ,QAAvB;AACA,mCAAKpB,iBAAL,CAAuB0B,OAAvB;AACH,yBALL,EAMKf,KANL,CAMW;AAAA,mCAAQ,OAAKV,SAAL,CAAeW,KAAf,GAAuBU,IAA/B;AAAA,yBANX;AAQH;;;sDAGgB;;AAEb,+BAAO,IAAIrC,UAAJ,CACHK,WAAWqC,aAAX,CAAyB,KAAK9B,UAAL,CAAgB+B,KAAzC,CADG,EAEHC,SAAS,KAAK/B,gBAAL,CAAsB8B,KAA/B,CAFG,EAGHE,WAAW,KAAK/B,WAAL,CAAiB6B,KAA5B,CAHG,CAAP;;AAMA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEH;;;uDAGiB;;AAEd,6BAAK/B,UAAL,CAAgB+B,KAAhB,GAAwB,EAAxB;AACA,6BAAK9B,gBAAL,CAAsB8B,KAAtB,GAA8B,CAA9B;AACA,6BAAK7B,WAAL,CAAiB6B,KAAjB,GAA0B,GAA1B;;AAEA,6BAAK/B,UAAL,CAAgBkC,KAAhB;AAEH;;;iDAEYC,M,EAAQ;;AAEjB,4BAAG,KAAK9B,WAAL,IAAoB8B,MAAvB,EAA8B;AAC1B,iCAAKhC,iBAAL,CAAuBiC,YAAvB;AACH,yBAFD,MAEO;AACH,iCAAKjC,iBAAL,CAAuBkC,YAAvB,CAAoC,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUD,EAAEH,MAAF,IAAYI,EAAEJ,MAAF,CAAtB;AAAA,6BAApC;AACH;AACD,6BAAK9B,WAAL,GAAmB8B,MAAnB;AACH","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\r\nimport {Mensagem} from '../models/Mensagem'; \r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nimport {NegociacoesView} from '../views/NegociacoesView';\r\nimport {MensagemView} from '../views/MensagemView';\r\n\r\nimport {NegociacaoService} from '../services/NegociacaoService';\r\nimport {NegociacaoDao} from '../DAO/NegociacaoDao';\r\n\r\nimport {DateHelper} from '../helpers/DateHelper';\r\nimport {Bind} from '../helpers/Bind';\r\n\r\n\r\nexport class NegociacaoController {\r\n\r\n    constructor() {\r\n        \r\n        let $ = document.querySelector.bind(document); // Simple jQuery\r\n        \r\n        this._inputData = $(\"#data\"); // PRIVATE PROPERTIES/ATTR\r\n        this._inputQuantidade = $(\"#quantidade\");\r\n        this._inputValor = $(\"#valor\");\r\n    \r\n        // this._negociacoesView.update(this._listaNegociacoes);\r\n        \r\n        // It's a model\r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(),\r\n            new NegociacoesView($('#negociacoesView')),\r\n            'adiciona', 'esvazia', 'ordenaTabela', 'inverteOrdem'\r\n        ) \r\n        /* Hiding inside your Bind Helper!\r\n        ProxyFactory.create(\r\n            new ListaNegociacoes(), // The object from ProxyFactory\r\n            ['adiciona', 'esvazia'], // The Properties from ProxyFactory\r\n            // The action to run - arrow function to use NegociacaoController as (this)\r\n            (model) => { \r\n                this._negociacoesView.update(model);\r\n            }\r\n        )\r\n        */\r\n\r\n        //function(this) - (this) = dynamic (depend on context - so this = model)\r\n        //To correct the parameter on function > use Reflect.apply\r\n        // Reflect.apply(this._armadilha, this._contexto, [this]);\r\n        //Arrow Function (this) = lexicon (don't change - so this = NegociacaoController)\r\n        \r\n        /*this._listaNegociacoes = new ListaNegociacoes(model =>            \r\n            this._negociacoesView.update(model)); */\r\n        \r\n        \r\n        // this._mensagemView.update(this._mensagem);\r\n\r\n        this._mensagem = new Bind(\r\n            new ListaNegociacoes(),\r\n            new MensagemView($('#mensagemView')),\r\n            'texto'\r\n        );\r\n            \r\n        /*\r\n        ProxyFactory.create(\r\n            new Mensagem(),\r\n            ['texto'],\r\n            (model) => {\r\n                this._mensagemView.update(model);\r\n            }\r\n        )\r\n        */     \r\n       this._ordemAtual = '';\r\n\r\n       this._service = new NegociacaoService();\r\n\r\n       this._init();\r\n       \r\n    }\r\n    \r\n    _init(){\r\n        \r\n        this._service\r\n            .lista()\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao => \r\n                    this._listaNegociacoes.adiciona(negociacao))\r\n            ).catch(erro => this._mensagem.texto = error);\r\n            /*\r\n                new NegociacaoDao(connection)\r\n                    .listaTodos()\r\n                    .then(negociacoes => {\r\n\r\n                        negociacoes.forEach(negociacao => {\r\n                            this._listaNegociacoes.adiciona(negociacao);\r\n                        });\r\n                    });\r\n            });\r\n            */\r\n         setInterval(() => {\r\n             this.importaNegociacoes();    \r\n         }, 3000);\r\n    }\r\n\r\n    adiciona(event){\r\n        \r\n        event.preventDefault();\r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n\r\n        /*  Solved by the NegociacaoDao - inside NegociacaoService - Responsible to make the unique connection then \r\n        create a new negotiation insider your DB\r\n        try{\r\n\r\n            this._listaNegociacoes.adiciona(this._criaNegociacao());\r\n            this._mensagem.texto = 'Negociação adicionada com sucesso';\r\n            this._limpaFormulario();\r\n\r\n        } catch(erro) {\r\n            this._mensagem.texto = erro;\r\n        }\r\n        */\r\n        \r\n    }\r\n\r\n    enviaNegociacoes(){\r\n        this._service\r\n            .envia(ListaNegociacoes);\r\n    }\r\n\r\n    importaNegociacoes(){\r\n\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => {\r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociações importadas com sucesso';\r\n            })\r\n            .catch(error => this._mensagem.texto = error);\r\n    }\r\n\r\n    apaga(){\r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n\r\n    }\r\n\r\n\r\n    _criaNegociacao(){\r\n\r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value), \r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        )\r\n    \r\n        //DATEHELPER METHOD!\r\n        // let dataMesAno = negociacao.data.getDate() \r\n        // + '/' + (negociacao.data.getMonth() + 1) // Fix month array [0~11]\r\n        // + '/' + negociacao.data.getFullYear();\r\n\r\n                \r\n        // console.log(typeof(this._inputData.value)); //string\r\n        // let data = new Date(this._inputData.value.split('-')); Same as the bottom code\r\n        // let data = new Date(this._inputData.value.replace(/-/g, ','));\r\n       \r\n        //DATEHELPER METHOD!\r\n        //Transforming 'yyyy-mm-dd' into new Date(yyyy, mm-1, dd)     \r\n        // let data = new Date(\r\n        //     // ... spread operator creates an array with each element\r\n        //     ...this._inputData.value\r\n        //         .split('-')\r\n        //         //Fixing month (0~11 not 1-12) with function MAP   \r\n        //         .map((item, indice) => item - indice % 2) // ARROW FUNCTION!!!\r\n        //         // .map(function(item, indice){ return item - indice % 2 });\r\n        // );        \r\n\r\n        // Calling your DateHelper method\r\n        // let helper = new DateHelper(); With static method you don't need\r\n\r\n    }\r\n\r\n\r\n    _limpaFormulario(){\r\n\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value =  0.0;\r\n\r\n        this._inputData.focus();\r\n\r\n    }\r\n\r\n    ordenaTabela(coluna) {\r\n\r\n        if(this._ordemAtual == coluna){\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n            this._listaNegociacoes.ordenaTabela((a, b) => a[coluna] - b[coluna]);\r\n        }\r\n        this._ordemAtual = coluna;\r\n    }\r\n\r\n}\r\n"]}